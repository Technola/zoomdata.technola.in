<?php
namespace App\Http\Controllers;
use App\Http\Requests;
use Illuminate\Http\Request;
use Validator;
use URL;
use Session;
use Redirect;
use Input;
use DB;
/** All Paypal Details class **/
use PayPal\Rest\ApiContext;
use PayPal\Auth\OAuthTokenCredential;
use PayPal\Api\Amount;
use PayPal\Api\Details;
use PayPal\Api\Item;
use PayPal\Api\ItemList;
use PayPal\Api\Payer;
use PayPal\Api\Payment;
use PayPal\Api\RedirectUrls;
use PayPal\Api\ExecutePayment;
use PayPal\Api\PaymentExecution;
use PayPal\Api\Transaction;
class AddMoneyController extends HomeController
{
	public $frontpages = array();
    public $user_id = array();
    private $_api_context;
    /**
     * Create a new controller instance.
     *
     * @return void
     */
     function __construct()
    {
       parent::__construct();
       // $userid = Session::get('user_id');
        //print_r($userid);die;
       // $username = Session::get('user_name');
        $this->frontpages = DB::table('frontpages')->whereNull('deleted_at')->get();
        // $if_exist =1;
        // if (!isset($userid)) { 
        //     return redirect("/home");
        // }
        // $this->user_id = $userid;
        // $this->user_name = $username;
         
        /** setup PayPal api context **/
        $paypal_conf = \Config::get('paypal');        
        $this->_api_context = new ApiContext(new OAuthTokenCredential($paypal_conf['client_id'], $paypal_conf['secret']));
        $this->_api_context->setConfig($paypal_conf['settings']);
    }
    /**
     * Show the application paywith paypalpage.
     *
     * @return \Illuminate\Http\Response
     */
    public function payWithPaypal()
    {
       // $createdPayment = require __DIR__ . '/CreatePaymentUsingPayPal.php';
    	       //  print_r($paypal_conf);die('49');
         // print_r($paypal_conf);die('49');

        // print_r($this->_api_context);die('50');

    	$data = array();
        $img = array('image','track_image');
        $sliders = DB::table('slider_images')->whereNull('deleted_at')->get();
        //echo "<pre>";print_r($this->frontpages);
        foreach ($this->frontpages as $pagekey => $pagedata) {
            if ($pagedata->slug =='home') {
                $data = $this->frontpages[$pagekey];
                // foreach ($img as $key => $imgkey) {
                //     $dashimage = DB::table('uploads')->where('id',$this->frontpages[$pagekey]->$imgkey)->get()[0]->name;
                //     $data->$imgkey = str_replace("public","",url('/')).'storage/uploads/'.$dashimage;
                // }
            }
        }
        foreach ($sliders as $key => $value) {
            $image = DB::table('uploads')->where('id',$value->image)->get()[0]->name;
            $imgpath = url('/').'/storage/uploads/'.$image;
            $sliders[$key]->image_path = $imgpath;
        }
         return View('template/paywithpaypal', [
            'frontpages' => $this->frontpages,
            'sliders' => $sliders,
            'homedata' => $data,
            'currentid' => $this->user_id,
            'username'=>isset($this->user_name) ? $this->user_name : '',
            'page' => 'home',
        ]);
        // return view('template/paywithpaypal');
    }
    /**
     * Store a details of payment with paypal.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function postPaymentWithpaypal(Request $request)
    {
    	//echo 15;die('95');
        $payer = new Payer();
         // print_r($this->_api_context);die('49');
        //print_r($payer);die('100');
        $payer->setPaymentMethod('paypal');
         // print_r($payer);die('100');
        $item_1 = new Item();
        $item_1->setName('Item 1') /** item name **/
            ->setCurrency('USD')
            ->setQuantity(1)
            ->setPrice($request->get('amount')); /** unit price **/
        $item_list = new ItemList();
        $item_list->setItems(array($item_1));
        $amount = new Amount();
        $amount->setCurrency('USD')
            ->setTotal($request->get('amount'));
        $transaction = new Transaction();
        $transaction->setAmount($amount)
            ->setItemList($item_list)
            ->setDescription('Your transaction description');
        $redirect_urls = new RedirectUrls();
        $redirect_urls->setReturnUrl(URL::route('payment.status')) /** Specify return URL **/
            ->setCancelUrl(URL::route('payment.status'));
        $payment = new Payment();
        $payment->setIntent('Sale')
            ->setPayer($payer)
            ->setRedirectUrls($redirect_urls)
            ->setTransactions(array($transaction));
            /** dd($payment->create($this->_api_context));exit; **/
        try {

            $payment->create($this->_api_context);
        } catch (\PayPal\Exception\PPConnectionException $ex) {
            if (\Config::get('app.debug')) {
                \Session::put('error','Connection timeout');
                return Redirect::route('addmoney.paywithpaypal');
                /** echo "Exception: " . $ex->getMessage() . PHP_EOL; **/
                /** $err_data = json_decode($ex->getData(), true); **/
                /** exit; **/
            } else {
                \Session::put('error','Some error occur, sorry for inconvenient');
                return Redirect::route('addmoney.paywithpaypal');
                /** die('Some error occur, sorry for inconvenient'); **/
            }
        }
        foreach($payment->getLinks() as $link) {
            if($link->getRel() == 'approval_url') {
                $redirect_url = $link->getHref();
                break;
            }
        }
        /** add payment ID to session **/
        Session::put('paypal_payment_id', $payment->getId());
        if(isset($redirect_url)) {
            /** redirect to paypal **/
            return Redirect::away($redirect_url);
        }
        \Session::put('error','Unknown error occurred');
        return Redirect::route('addmoney.paywithpaypal');
    }
    public function getPaymentStatus()
    {//die('156');
        /** Get the payment ID before session clear **/
        // if(!empty($this->user_id)){
            $payment_id = Session::get('paypal_payment_id');
        /** clear the session payment ID **/
        Session::forget('paypal_payment_id');
        if (empty(Input::get('PayerID')) || empty(Input::get('token'))) {
            \Session::put('error','Payment failed');
            return Redirect::route('addmoney.paywithpaypal');
        }

        $payment = Payment::get($payment_id, $this->_api_context);
        // print_r($Payment);
        $paymentDetails = json_decode($payment, true);
        /** PaymentExecution object includes information necessary **/
        /** to execute a PayPal account payment. **/
        /** The payer_id is added to the request query parameters **/
        /** when the user is redirected from paypal back to your site **/
        $execution = new PaymentExecution();
        $execution->setPayerId(Input::get('PayerID'));
        /**Execute the payment **/
        $result = $payment->execute($execution, $this->_api_context);
        $resultDetails = json_decode($result, true);

        // print_r($result);die('199');
        /** dd($result);exit; /** DEBUG RESULT, remove it later **/
        if ($result->getState() == 'approved') { 
            $payerID    = $paymentDetails['payer']['payer_info']['payer_id'];
            $payerEmail = $paymentDetails['payer']['payer_info']['email'];
            /** it's all right **/
            /** Here Write your database logic like that insert record or value in database if you want **/
            \Session::put('success','Payment success');
            return Redirect::route('addmoney.paywithpaypal');
        }
        \Session::put('error','Payment failed');
        return Redirect::route('addmoney.paywithpaypal');
        // }
        
    }

    public function addpayment(){

        $userid = Session::get('user_id');
        if(!empty($userid)){
            $purchases = DB::table('cart')->where('user_id', '=',$userid )->sum('price');
            if($purchases>0){
                $payer = new Payer();
                $payer->setPaymentMethod('paypal');
                 // print_r($payer);die('100');
                $item_1 = new Item();
                $item_1->setName('Item 1') /** item name **/
                    ->setCurrency('USD')
                    ->setQuantity(1)
                    ->setPrice($purchases); /** unit price **/
                $item_list = new ItemList();
                $item_list->setItems(array($item_1));
                $amount = new Amount();
                $amount->setCurrency('USD')
                    ->setTotal($purchases);
                $transaction = new Transaction();
                $transaction->setAmount($amount)
                    ->setItemList($item_list)
                    ->setDescription('Your transaction description');
                $redirect_urls = new RedirectUrls();
                $redirect_urls->setReturnUrl(URL::route('PaymentStatus')) /** Specify return URL **/
                    ->setCancelUrl(URL::route('PaymentStatus'));
                $payment = new Payment();
                $payment->setIntent('Sale')
                    ->setPayer($payer)
                    ->setRedirectUrls($redirect_urls)
                    ->setTransactions(array($transaction));
                    /** dd($payment->create($this->_api_context));exit; **/
                try {

                    $payment->create($this->_api_context);
                } catch (\PayPal\Exception\PPConnectionException $ex) {
                    if (\Config::get('app.debug')) {
                        \Session::put('error','Connection timeout');
                        return Redirect::route('checkout/step3');
                        /** echo "Exception: " . $ex->getMessage() . PHP_EOL; **/
                        /** $err_data = json_decode($ex->getData(), true); **/
                        /** exit; **/
                    } else {
                        \Session::put('error','Some error occur, sorry for inconvenient');
                        return Redirect::route('checkout/step3');
                        /** die('Some error occur, sorry for inconvenient'); **/
                    }
                }
                foreach($payment->getLinks() as $link) {
                    if($link->getRel() == 'approval_url') {
                        $redirect_url = $link->getHref();
                        break;
                    }
                }
                /** add payment ID to session **/
                Session::put('paypal_payment_id', $payment->getId());
                if(isset($redirect_url)) {
                    /** redirect to paypal **/
                    return Redirect::away($redirect_url);
                }
                \Session::put('error','Unknown error occurred');
                return Redirect::route('checkout/step3');
            }else{
            return redirect("/");
            }

            
            // die('205');
        } else{
            return redirect("/");
        }
    }
    public function PaymentStatus(){
        // die('265');
             $payment_id = Session::get('paypal_payment_id');
        /** clear the session payment ID **/
        Session::forget('paypal_payment_id');
        if (empty(Input::get('PayerID')) || empty(Input::get('token'))) {
            \Session::put('error','Payment failed');
            return Redirect::route('checkout/step3');
        }

        $payment = Payment::get($payment_id, $this->_api_context);
        // print_r($Payment);
        $paymentDetails = json_decode($payment, true);
        /** PaymentExecution object includes information necessary **/
        /** to execute a PayPal account payment. **/
        /** The payer_id is added to the request query parameters **/
        /** when the user is redirected from paypal back to your site **/
        $execution = new PaymentExecution();
        $execution->setPayerId(Input::get('PayerID'));
        /**Execute the payment **/
        $result = $payment->execute($execution, $this->_api_context);
        $resultDetails = json_decode($result, true);

        // print_r($result);die('199');
        /** dd($result);exit; /** DEBUG RESULT, remove it later **/
        if ($result->getState() == 'approved') { 
            $payerID    = $paymentDetails['payer']['payer_info']['payer_id'];
            $payerEmail = $paymentDetails['payer']['payer_info']['email'];
            /** it's all right **/
            /** Here Write your database logic like that insert record or value in database if you want **/
            \Session::put('success','Payment success');
            return Redirect::route('checkout/step3');
        }
        \Session::put('error','Payment failed');
        return Redirect::route('checkout/step3');
    }
}